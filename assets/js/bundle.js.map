{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/bundle.js","src/js/modules/armor.js","src/js/modules/dice.js","src/js/modules/dicerolls.js","src/js/modules/modifiers.js","src/js/modules/monster.js","src/js/modules/weapons.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_dice","_monster","_armor","_weapons","_dicerolls","console","log","rollDice","d2","d4","d6","d10","d12","d20","d100","goblin","paddedArmor","club","damage","attack","str","ac","name","type","cost","disadvantage","weight","number","modifier","arguments","undefined","Math","ceil","random","multiDice","numberOfDice","diceSides","finalNumber","d8","_modifiers","attacker","target","attackModifier","roll","concat","stat","floor","Monster","hp","speed","dex","con","_int","wis","cha","skills","senses","languages","challenge","_classCallCheck","this","stealth","darkvision","perception","properties"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { rollDice, d2, d4, d6, d8, d10, d12, d20, d100 } from './modules/dice';\r\nimport { goblin } from './modules/monster';\r\nimport { paddedArmor } from './modules/armor';\r\nimport { club } from './modules/weapons';\r\nimport { attack } from './modules/dicerolls';\r\nimport { modifier } from './modules/modifiers';\r\n\r\nconsole.log(rollDice(), d2, d4, d6, d10, d12, d20, d100);\r\nconsole.log(goblin);\r\nconsole.log(paddedArmor);\r\nconsole.log(club, club.damage);\r\nconsole.log(\r\n\tattack(goblin, goblin, goblin.str, goblin.ac)\r\n\t// modifier(goblin.str)\r\n);\r\n\r\nconst character = {};\r\n","class Armor {}\r\n\r\nconst paddedArmor = {\r\n\tname: 'Padded Armor',\r\n\ttype: 'light',\r\n\tcost: 5,\r\n\tac: 11,\r\n\tstr: null,\r\n\tdisadvantage: true,\r\n\tweight: 8,\r\n};\r\n\r\nexport { paddedArmor };\r\n","const rollDice = (number, modifier = 0) => {\r\n\tif (number) {\r\n\t\treturn Math.ceil(Math.random() * number) + modifier;\r\n\t} else {\r\n\t\treturn Math.ceil(Math.random() * 20) + modifier;\r\n\t}\r\n};\r\nconst multiDice = (numberOfDice, diceSides, modifier = 0) => {\r\n\tlet finalNumber = 0;\r\n\tif (numberOfDice > 0) {\r\n\t\tfor (let i = 0; i < numberOfDice; i++) {\r\n\t\t\tfinalNumber += rollDice(diceSides, modifier);\r\n\t\t}\r\n\t}\r\n\treturn finalNumber;\r\n};\r\nconst d2 = multiDice(1, 2);\r\nconst d4 = multiDice(1, 4);\r\nconst d6 = multiDice(1, 6);\r\nconst d8 = multiDice(1, 8);\r\nconst d10 = multiDice(1, 10);\r\nconst d12 = multiDice(1, 12);\r\nconst d20 = multiDice(1, 20);\r\nconst d100 = multiDice(1, 100);\r\n\r\nexport { multiDice, rollDice, d2, d4, d6, d8, d10, d12, d20, d100 };\r\n","import {\r\n\tmultiDice,\r\n\trollDice,\r\n\td2,\r\n\td4,\r\n\td6,\r\n\td8,\r\n\td10,\r\n\td12,\r\n\td20,\r\n\td100,\r\n} from './dice';\r\nimport { modifier } from './modifiers';\r\nconst attack = (attacker, target, attackModifier = 10, ac = 10) => {\r\n\tlet roll = d20 + modifier(attackModifier);\r\n\tif (roll >= ac) {\r\n\t\treturn `${attacker.name} hit ${target.name}! raw roll: ${roll} against AC ${ac}`;\r\n\t} else {\r\n\t\treturn `${attacker.name} missed ${target.name}! raw roll: ${roll} against AC ${ac}`;\r\n\t}\r\n};\r\n\r\nexport { attack };\r\n","const modifier = (stat) => {\r\n\treturn Math.floor((stat - 10) / 2);\r\n};\r\nexport { modifier };\r\n","import {\r\n\tmultiDice,\r\n\trollDice,\r\n\td2,\r\n\td4,\r\n\td6,\r\n\td8,\r\n\td10,\r\n\td12,\r\n\td20,\r\n\td100,\r\n} from './dice';\r\nclass Monster {\r\n\tconstructor(\r\n\t\tname,\r\n\t\tac,\r\n\t\thp,\r\n\t\tspeed,\r\n\t\tstr,\r\n\t\tdex,\r\n\t\tcon,\r\n\t\tint,\r\n\t\twis,\r\n\t\tcha,\r\n\t\tskills,\r\n\t\tsenses,\r\n\t\tlanguages,\r\n\t\tchallenge\r\n\t) {\r\n\t\tthis.name = name;\r\n\t\tthis.ac = ac;\r\n\t\tthis.hp = hp;\r\n\t\tthis.speed = speed;\r\n\t\tthis.str = str;\r\n\t\tthis.dex = dex;\r\n\t\tthis.con = con;\r\n\t\tthis.int = int;\r\n\t\tthis.wis = wis;\r\n\t\tthis.cha = cha;\r\n\t\tthis.skills = skills;\r\n\t\tthis.senses = senses;\r\n\t\tthis.languages = languages;\r\n\t\tthis.challenge = challenge;\r\n\t}\r\n}\r\n\r\nconst goblin = new Monster(\r\n\t'goblin',\r\n\t15,\r\n\tmultiDice(2, 6),\r\n\t30,\r\n\t15,\r\n\t14,\r\n\t14,\r\n\t12,\r\n\t10,\r\n\t9,\r\n\t{ stealth: 6 },\r\n\t{ darkvision: 60, perception: 9 },\r\n\t['Common', 'Goblin'],\r\n\t1 / 4\r\n);\r\n\r\nexport { goblin };\r\n","import { d4 } from './dice';\r\n\r\nclass Weapon {}\r\n\r\nconst club = {\r\n\tname: 'Club',\r\n\tcost: 1,\r\n\tdamage: d4,\r\n\tweight: 2,\r\n\tproperties: ['light'],\r\n};\r\n\r\nexport { club };\r\n"]}